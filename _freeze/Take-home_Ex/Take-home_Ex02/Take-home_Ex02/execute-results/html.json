{
  "hash": "2686343c484f00d1dd9ca20351aac6eb",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 2\"\nauthor: \"Jaya George\"\ndate: \"April 30,2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse,ggplot2,readr,dplyr,lubridate,stringr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis_1 <- read_csv(\"data/ResidentialTransaction20240308160536.csv\")\nrealis_2 <- read_csv(\"data/ResidentialTransaction20240308160736.csv\")\nrealis_3 <- read_csv(\"data/ResidentialTransaction20240308161009.csv\")\nrealis_4 <- read_csv(\"data/ResidentialTransaction20240308161109.csv\")\nrealis_5 <- read_csv(\"data/ResidentialTransaction20240414220633.csv\")\nrealis <- bind_rows(realis_1, realis_2, realis_3, realis_4, realis_5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis$`Sale Date` <- as.Date(realis$`Sale Date`, format = \"%d %b %Y\")\nrealis$`Nett Price($)` <- as.numeric(gsub(\"[^0-9.]\", \"\", realis$`Nett Price($)`))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrealis2024Q1 <- realis %>%\n  filter(year(`Sale Date`) == 2024 & quarter(`Sale Date`) == 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNumber_of_Units_by_Property_Type <- realis2024Q1 %>%\n  group_by(`Property Type`) %>%\n  summarise(`Total Number of Units` = sum(`Number of Units`))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNumber_of_Units_by_Property_Type <- Number_of_Units_by_Property_Type %>%\n  arrange(desc(`Total Number of Units`)) %>%\n  mutate(`Property Type` = factor(`Property Type`, levels = `Property Type`))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Determine the address unit level.\nrealis2024Q1 <- realis2024Q1 %>%\n  mutate(\"Floor Level\" = if_else(str_detect(Address, '#'),\n                                   str_trim(str_extract(str_split(Address, \"#\", simplify = TRUE)[, 2], \"^[^\\\\-]*\")),\n                                   \"N.A.\"))\n\n#Determine the address unit level category (Low, middle or high).\nrealis2024Q1 <- realis2024Q1 %>%\n  mutate(`Floor Level Category` = case_when(\n    `Property Type` %in% c(\"Terrace House\", \"Semi-Detached House\", \"Detached House\") ~ \"N.A.\",\n    `Floor Level` == \"N.A.\" ~ \"Low\",\n    as.integer(`Floor Level`) <= 5 ~ \"Low\",\n    as.integer(`Floor Level`) <= 10 ~ \"Middle\",\n    TRUE ~ \"High\"\n  ))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reorder levels of 'Property Type' alphabetically\nrealis2024Q1$`Property Type` <- factor(realis2024Q1$`Property Type`, levels = c(\"Apartment\",\"Condominium\",\"Terrace House\", \"Semi-Detached House\",\"Detached House\",\"Executive Condominium\"))\n\n# Reorder levels of 'Floor Level Category' by \"High\", \"Middle\", \"Low\"\nrealis2024Q1$`Floor Level Category` <- factor(realis2024Q1$`Floor Level Category`, levels = c(\"High\", \"Middle\", \"Low\"))\n\n# Create the boxplot using ggplot2\nggplot(realis2024Q1, aes(x = `Property Type`, y = `Unit Price ($ PSM)`, fill = `Floor Level Category`)) +\n  geom_boxplot() +\n  scale_fill_manual(values = c(\"N.A.\" = \"gray\", \"Low\" = \"blue1\", \"Middle\" =\"green\", \"High\" = \"red\")) +\n  labs(x = \"Property Type\", y = \"Unit Price ($ PSM)\", fill = \"Floor Level Category\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensure the 'realis2024Q1' data frame is loaded and appropriate libraries are available\nlibrary(ggplot2)\n\n# Reorder the levels of 'Property Type' alphabetically\nrealis2024Q1$`Property Type` <- factor(realis2024Q1$`Property Type`,\n                                       levels = c(\"Apartment\", \"Condominium\", \"Executive Condominium\",\n                                                  \"Terrace House\", \"Semi-Detached House\", \"Detached House\"))\n\n# Reorder levels of 'Floor Level Category' in a specified order\nrealis2024Q1$`Floor Level Category` <- factor(realis2024Q1$`Floor Level Category`,\n                                              levels = c(\"High\", \"Middle\", \"Low\"))\n\n# Create the boxplot using ggplot2\nggplot(realis2024Q1, aes(y = `Property Type`, x = `Unit Price ($ PSM)`, fill = `Floor Level Category`)) +\n  geom_boxplot() +\n  scale_fill_manual(values = c(\"High\" = \"lightgreen\", \"Middle\" =\"lightblue\", \"Low\" = \"yellow\", \"N.A.\" = \"gray\")) +\n  labs(x = \"Property Type\", y = \"Unit Price ($ PSM)\", fill = \"Floor Level Category\") +\n  #theme_minimal() +\n  theme(axis.text.x = element_text(angle = 0, hjust = 0.5),\n        legend.position = \"bottom\", # Puts legend below the plot\n        legend.box = \"horizontal\",  # Aligns legend items horizontally\n        legend.title = element_text(size = 12, face = \"bold\"), # Styles for legend title\n        legend.text = element_text(size = 12)) # Styles for legend text\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=1440}\n:::\n\n```{.r .cell-code}\n   # Rotate x-axis labels for better visibility\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(realis2024Q1, aes(x = `Floor Level Category`, y = `Unit Price ($ PSM)`, fill = `Floor Level Category`)) +\n  geom_boxplot() +\n  facet_grid(rows = vars(`Property Type`)) +  # Create a grid of plots by property type\n  scale_fill_manual(values = c(\"High\" = \"blue4\", \"Middle\" =\"blue3\", \"Low\" = \"blue1\", \"N.A.\" = \"gray\")) +\n  labs(x = \"Floor Level Category\", y = \"Unit Price ($ PSM)\", fill = \"Floor Level Category\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1), axis.text.y = element_text(angle = 0, hjust = 1)) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
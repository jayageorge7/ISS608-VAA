{
  "hash": "b414fbbd8c2772908ab27d0215f641e6",
  "result": {
    "markdown": "---\ntitle: \"Take-home Exercise 1\"\nauthor: \"Jaya George\"\ndate: \"April 17,2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n## Overview\n\n### Setting the scene\n\n### Our task\n\n## Getting started\n\n### Load packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"pacman\")\nlibrary(\"lubridate\")\nlibrary(readr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, haven,\n               ggrepel, ggthemes,\n               ggridges, ggdist,colorspace,ggdist,\n               patchwork, scales)\n```\n:::\n\n\n# *Import data*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_data1 <- read_csv(\"data/ResidentialTransaction20240308160536.csv\",show_col_types = FALSE)\nres_data2 <- read_csv(\"data/ResidentialTransaction20240308160736.csv\",show_col_types = FALSE)\nres_data3 <- read_csv(\"data/ResidentialTransaction20240308161009.csv\",show_col_types = FALSE)\nres_data4 <- read_csv(\"data/ResidentialTransaction20240308161109.csv\",show_col_types = FALSE)\nres_data5 <- read_csv(\"data/ResidentialTransaction20240414220633.csv\",show_col_types = FALSE)\nres_data <- bind_rows(res_data1, res_data2, res_data3, res_data4, res_data5)\n```\n:::\n\n\n### Data pre-processing\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(res_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 26806\n```\n:::\n:::\n\n\n#### **Glimpse of data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(res_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 26,806\nColumns: 21\n$ `Project Name`                <chr> \"THE REEF AT KING'S DOCK\", \"URBAN TREASU…\n$ `Transacted Price ($)`        <dbl> 2317000, 1823500, 1421112, 1258112, 1280…\n$ `Area (SQFT)`                 <dbl> 882.65, 882.65, 1076.40, 1033.34, 871.88…\n$ `Unit Price ($ PSF)`          <dbl> 2625, 2066, 1320, 1218, 1468, 1767, 1095…\n$ `Sale Date`                   <chr> \"01 Jan 2023\", \"02 Jan 2023\", \"02 Jan 20…\n$ Address                       <chr> \"12 HARBOURFRONT AVENUE #05-32\", \"205 JA…\n$ `Type of Sale`                <chr> \"New Sale\", \"New Sale\", \"New Sale\", \"New…\n$ `Type of Area`                <chr> \"Strata\", \"Strata\", \"Strata\", \"Strata\", …\n$ `Area (SQM)`                  <dbl> 82.0, 82.0, 100.0, 96.0, 81.0, 308.7, 42…\n$ `Unit Price ($ PSM)`          <dbl> 28256, 22238, 14211, 13105, 15802, 19015…\n$ `Nett Price($)`               <chr> \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", …\n$ `Property Type`               <chr> \"Condominium\", \"Condominium\", \"Executive…\n$ `Number of Units`             <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ Tenure                        <chr> \"99 yrs from 12/01/2021\", \"Freehold\", \"9…\n$ `Completion Date`             <chr> \"Uncompleted\", \"Uncompleted\", \"Uncomplet…\n$ `Purchaser Address Indicator` <chr> \"HDB\", \"Private\", \"HDB\", \"HDB\", \"HDB\", \"…\n$ `Postal Code`                 <chr> \"097996\", \"419535\", \"269343\", \"269294\", …\n$ `Postal District`             <chr> \"04\", \"14\", \"27\", \"27\", \"28\", \"19\", \"10\"…\n$ `Postal Sector`               <chr> \"09\", \"41\", \"26\", \"26\", \"79\", \"54\", \"27\"…\n$ `Planning Region`             <chr> \"Central Region\", \"East Region\", \"North …\n$ `Planning Area`               <chr> \"Bukit Merah\", \"Bedok\", \"Yishun\", \"Yishu…\n```\n:::\n:::\n\n\n#### **Check for duplicates**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_data[duplicated(res_data),]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 0 × 21\n# ℹ 21 variables: Project Name <chr>, Transacted Price ($) <dbl>,\n#   Area (SQFT) <dbl>, Unit Price ($ PSF) <dbl>, Sale Date <chr>,\n#   Address <chr>, Type of Sale <chr>, Type of Area <chr>, Area (SQM) <dbl>,\n#   Unit Price ($ PSM) <dbl>, Nett Price($) <chr>, Property Type <chr>,\n#   Number of Units <dbl>, Tenure <chr>, Completion Date <chr>,\n#   Purchaser Address Indicator <chr>, Postal Code <chr>,\n#   Postal District <chr>, Postal Sector <chr>, Planning Region <chr>, …\n```\n:::\n:::\n\n\n#### **Filtering data for selected variables**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_data_final = res_data %>% \n  select(\"Property Type\", \"Area (SQFT)\",\"Unit Price ($ PSF)\",\"Sale Date\",\"Transacted Price ($)\",\"Postal District\",\"Type of Sale\",\"Planning Region\",\"Planning Area\",\"Purchaser Address Indicator\") %>%\n  rename(\"Property_Type\" = \"Property Type\",\n         \"Area_sqft\" = \"Area (SQFT)\",\n         \"Unit_Price_sqft\"=\"Unit Price ($ PSF)\",\n         \"Sale_Date\"=\"Sale Date\",\n         \"Sale_Price\"=\"Transacted Price ($)\",\n         \"Postal_District\"=\"Postal District\",\n         \"Sale_Type\"=\"Type of Sale\",\n         \"Planning_Region\"=\"Planning Region\",\n         \"Planning_Area\"=\"Planning Area\",\n         \"Purchaser_Address_Indicator\"=\"Purchaser Address Indicator\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(res_data_final$Sale_Date)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"01 Jan 2023\" \"02 Jan 2023\" \"02 Jan 2023\" \"02 Jan 2023\" \"03 Jan 2023\"\n[6] \"03 Jan 2023\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nres_data_q1_2024 <- res_data_final %>%\n  mutate(Sale_Date = as.Date(Sale_Date, format = \"%d %b %Y\")) %>% \n  filter(quarter(Sale_Date) == 1 & year(Sale_Date) == 2024) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nView(res_data_q1_2024)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnrow(res_data_q1_2024)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4902\n```\n:::\n:::\n\n\n## **Handling missing values**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(res_data_q1_2024$Property_Type))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(res_data_final$Area_sqft))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(res_data_final$Unit_Price_sqft))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(res_data_final$Sale_Date))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(res_data_final$Sale_Price))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(res_data_final$Postal_District))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(res_data_final$Sale_Type))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(res_data_final$Planning_Region))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(is.na(res_data_final$Planning_Area))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n:::\n\n\n::: panel-tabset\n## Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#abc\n```\n:::\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(ggridges)\n\n# Assume you have a dataframe `df` with a numeric variable `value`\n# and a categorical variable `category` that you want to plot\n\n# Basic ridge plot\nggplot(res_data_final, aes(x = Unit_Price_sqft, y = Property_Type, fill = Property_Type)) +\n  geom_density_ridges() +\n  theme_ridges() + # this is optional, for a better theme tailored for ridge plots\n  labs(title = 'Ridge Plot', x = 'Value', y = 'Category')\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the box plot\nggplot(res_data_final, aes(x = Property_Type, y = Unit_Price_sqft)) +\n  geom_boxplot() +  facet_grid(~ Planning_Region) +\n  labs(\n    title = \"Price Distribution by Property Type (Q1 2024)\",\n    x = \"Property Type\",\n    y = \"Price\"\n  ) +\n  scale_y_continuous(breaks = seq(0, max(res_data_final$Unit_Price_sqft), by = 500))+\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) # Rotate x-axis labels\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-24-1.png){width=1728}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntransaction_counts <- res_data_final %>%\n  count(Property_Type, Sale_Type) \n\nggplot(transaction_counts, aes(x = Property_Type, y = n, fill = Sale_Type)) +\n  geom_bar(stat = \"identity\", position = \"stack\") + \n  labs(\n    title = \"Transaction Count by Property Type and Sale Type (Q1 2024)\",\n    x = \"Property Type\",\n    y = \"Number of Transactions\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntransaction_counts <- res_data_final %>%\n  count(Planning_Region,Property_Type) \n\nggplot(transaction_counts, aes(x = Planning_Region, y = n, fill = Property_Type)) +\n  geom_bar(stat = \"identity\", position = \"stack\") + \n  labs(\n    title = \"Transaction Count by Property Type and Sale Type (Q1 2024)\",\n    x = \"Property Type\",\n    y = \"Number of Transactions\"\n  ) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntransaction_counts <- res_data_final %>%\n  count(Planning_Area,Property_Type) \n\nggplot(transaction_counts, aes(x = Planning_Area, y = n, fill = Property_Type)) +\n  geom_bar(stat = \"identity\", position = \"stack\") + \n  labs(\n    title = \"Transaction Count by Property Type and Sale Type (Q1 2024)\",\n    x = \"Property Type\",\n    y = \"Number of Transactions\"\n  ) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1)) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-27-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyverse)  # Might be needed \n\n# Assuming your data is in a data frame called 'realis_data' \n# Replace with your actual column names\n\nggplot(res_data_final, aes(x = Unit_Price_sqft,fill = Sale_Type)) +\n  geom_histogram(bins = 30) +  # Adjust 'bins' for desired resolution\n  labs(\n    x = \"Unit Size\",\n    y = \"Count\",\n    title = \"Distribution of Unit Size by Planning Region and Sale Type\"\n  ) +\n  theme(strip.text = element_text(size = 10))  # Adjust strip text size, if needed\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=res_data_final, \n       aes(x = Unit_Price_sqft,colour = Sale_Type)) +\n  geom_density()           \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res_data_final, \n       aes(x = Unit_Price_sqft, \n           y = Planning_Region,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"Unit Price in sqft\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res_data_final, \n       aes(x = Unit_Price_sqft, \n           y = Planning_Area)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"Unit Price in Sqft\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-31-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res_data_final, \n       aes(x = Unit_Price_sqft, \n           y = Property_Type)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\ntheme(axis.text.x = element_text(angle = 90, hjust = 1)) \n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-32-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the ridge plot\nSES_ridgeplot <- ggplot(res_data_final, aes(x = Area_sqft, y = Property_Type, fill = 0.5 - abs(0.5 - stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\", direction = -1) +\n  facet_wrap(~ Planning_Region, scales = \"free_x\") + # Faceting by subject\n  labs(title = \"Students with more advantageous socioeconomic status tend to perform better\",\n       subtitle = \"Density plots of performance stratified by socioeconomic status\",\n       x = \"Score\") +\n  scale_x_continuous(limits = c(0, 8000)) + \n  theme_minimal() +\n  theme(legend.position = \"none\", # Hides the legend,\n        plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 8))\n\n\nSES_ridgeplot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-33-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the ridge plot\nSES_ridgeplot <- ggplot(res_data_final, aes(x = Area_sqft, y = Property_Type, fill = 0.5 - abs(0.5 - stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\", direction = -1) +\n  facet_wrap(~ Planning_Area, scales = \"free_x\") + # Faceting by subject\n  labs(title = \"Students with more advantageous socioeconomic status tend to perform better\",\n       subtitle = \"Density plots of performance stratified by socioeconomic status\",\n       x = \"Score\") +\n  scale_x_continuous(limits = c(0, 8000)) + \n  theme_minimal() +\n  theme(legend.position = \"none\", # Hides the legend,\n        plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 8))\n\n\nSES_ridgeplot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-34-1.png){width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the ridge plot\nSES_ridgeplot <- ggplot(res_data_final, aes(x = Area_sqft, y = Planning_Area, fill = 0.5 - abs(0.5 - stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\", direction = -1) +\n  #facet_wrap(~ Planning_Area, scales = \"free_x\") + # Faceting by subject\n  labs(title = \"Students with more advantageous socioeconomic status tend to perform better\",\n       subtitle = \"Density plots of performance stratified by socioeconomic status\",\n       x = \"Score\") +\n  scale_x_continuous(limits = c(0, 8000)) + \n  theme_minimal() +\n  theme(legend.position = \"none\", # Hides the legend,\n        plot.title = element_text(face = \"bold\", size = 12),\n        plot.subtitle = element_text(size = 8))\n\n\nSES_ridgeplot\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-35-1.png){width=768}\n:::\n:::\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}